name: Winget Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  winget:
    runs-on: windows-latest
    
    steps:
    - name: Get release info
      id: release_info
      run: |
        $latest_release = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/latest"
        $version = $latest_release.tag_name -replace '^[vV]', ''
        
        # Match the actual ZIP file naming format
        $zipUrl = "https://github.com/${{ github.repository }}/releases/download/$($latest_release.tag_name)/DLSS.Updater.$version.zip"
        
        echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        echo "URL=$zipUrl" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      shell: pwsh
    
    - name: Download and Run WingetCreate
      run: |
        # Get the latest release info for winget-create
        $wingetCreateRelease = Invoke-RestMethod -Uri "https://api.github.com/repos/microsoft/winget-create/releases/latest"
        
        # Find the self-contained exe in the assets
        $exeAsset = $wingetCreateRelease.assets | Where-Object { $_.name -like "*self-contained*" -or $_.name -eq "wingetcreate.exe" }
        
        if ($exeAsset) {
          Write-Host "Downloading from: $($exeAsset.browser_download_url)"
          Invoke-WebRequest -Uri $exeAsset.browser_download_url -OutFile "wingetcreate.exe"
          
          # Verify download
          if (Test-Path ".\wingetcreate.exe") {
            $fileInfo = Get-Item ".\wingetcreate.exe"
            Write-Host "Downloaded wingetcreate.exe: $($fileInfo.Length) bytes"
            
            # Run version check
            .\wingetcreate.exe version
            
            # Run the update
            .\wingetcreate.exe update `
              Recol.DLSSUpdater `
              --version "${{ steps.release_info.outputs.VERSION }}" `
              --urls "${{ steps.release_info.outputs.URL }}" `
              --submit `
              --token "${{ secrets.WINGET_TOKEN }}"
          }
          else {
            Write-Error "Failed to download wingetcreate.exe"
            exit 1
          }
        }
        else {
          Write-Error "Could not find wingetcreate.exe in release assets"
          Write-Host "Available assets:"
          $wingetCreateRelease.assets | ForEach-Object { Write-Host " - $($_.name)" }
          exit 1
        }
      shell: pwsh
